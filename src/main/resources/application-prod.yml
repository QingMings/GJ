server:
  port: 8009
  servlet:
    context-path: /gj
    jsp:
      init-parameters:
        listings: true
  shutdown: graceful

spring:
  application:
    name: display
  lifecycle:
    timeout-per-shutdown-phase: 10s
  config:
    activate:
      on-profile: prod
  datasource:
    druid:
      driver-class-name: com.oscar.Driver
      #      url: jdbc:oscar://192.168.1.14:2003/OSRDB?serverTimezone=UTC&useSSL=FALSE
#      url: jdbc:oscar://192.168.31.213:2003/OSRDB?serverTimezone=UTC&useSSL=FALSE
      url: jdbc:oscar://192.168.1.9:2003/OSRDB?serverTimezone=UTC&useSSL=FALSE
      #      url: jdbc:oscar://192.168.0.103:2003/OSRDB?serverTimezone=UTC&useSSL=FALSE
      #      username: SYSDBA
      username: DSUSER
      #      password: szoscar55
      password: 123456
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat
      # 配置初始化大小、最小、最大 (通常来说，只需要修改initialSize、minIdle、maxActive)
      initial-size: 1
      min-idle: 1
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      validation-query: 'SELECT 1 FROM dual'
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  main:
    allow-bean-definition-overriding: true
  output:
    ansi:
      enabled: always
  jackson:
    serialization:
      write-dates-as-timestamps: true
  rabbitmq:
    username: hzgj
    password: hzgj123456
    #    host: 192.168.43.244
#    host: 192.168.31.213
    host: 192.168.1.9
    port: 5672
    virtual-host: hzgj
    listener:
      simple:
        acknowledge-mode: manual
        concurrency: 5
        max-concurrency: 10
        prefetch: 1
mybatis:
  mapper-locations: classpath:mapper/*.xml
logging:
  level:
    com.yhl.gl.mapper: DEBUG
# mybatis-plus 配置
mybatis-plus:
  global-config:
    banner: off
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
#    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
# mybatis 分页插件
pagehelper:
  auto-dialect: true


# v3版本
pyScriptV3:
#  pyV3WorkDir: warningProgram/core-v4/
  pyV3WorkDir: E:/1A_2022_liangpnghui/GJ/GJ/warningProgram/core-v4/
  path: GJXXCL.py
  manualOrder:
#    savePath: warningProgram/historyOrderJson   # 手动运行订单
    savePath: E:/1A_2022_liangpnghui/GJ/GJ/warningProgram/historyOrderJson   # 手动运行订单

    createDirByDay: true                           # 是否按天分文件夹  如果是，则 savePath = warningProgram/historyRunParam/2022-08-01 这种
    createDirByTask: true # 是否按任务分文件夹  如果是  则savePath = warningProgram/historyRunParam/任务xx 这种，如果按天也开了，savePath=warningProgram/historyRunParam/2022-08-01/任务xx 这种
  taskDiskRoot: E:/1A_2022_liangpnghui/GJ/GJ/warningProgram/core-v4/DiskArray
  taskParam:
    path: config/defaultParam.json
  xmlPushQueue:
    xml_exchange: gj_xml_exchange
    xml_queue:  gj_xml_queue
    xml_routeKey: gj_xml_routeKey
  warnReportQueue:
    warn_exchange: gj_warn_exchange
    warn_queue: gj_warn_queue
    warn_routeKey:  gj_routeKey
#!!!==加上参数u让脚本实时输出==!!!
pyCmd:
  paramV3_list: python3,-u,${pyScriptV3.path}

# 基础服务通用接口
loginConfig:
  # 1	用户登陆接口
  loginPath: http://localhost:9001/auth/login
  #2	用户退出接口
  logOutPath: http://localhost:9001/auth/logout
  #3	根据Token获取用户信息
  verifyUser: http://localhost:9001/auth/getUserInfoByToken
  #4	系统状态上报接口
  systemStatus: http://localhost:9001/find/system/systemStatus
  #5	日志上报接口
  logReport: http://localhost:9001/YWDD/loginfo

# 服务配置
serverConfig:
  systemCode: xx
  serviceName:  xxx